services:
  nats:
    container_name: nats_server
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - app-network
    volumes:
      - ./nats-server.conf:/nats-server.conf
    command: ["--config", "/nats-server.conf"]

  inventory_db:
    container_name: inventory_db
    image: postgres:15
    restart: always
    env_file:
      - ./inventory/.env.inventory
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  orders_db:
    container_name: orders_db
    image: postgres:15
    env_file:
      - ./orders/.env.orders
    ports:
      - "5434:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  statistics_db:
    container_name: statistics_db
    image: postgres:15
    env_file:
      - ./statistics/.env.statistics
    ports:
      - "5435:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api-gateway:
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - inventory
      - orders
      - statistics
    networks:
      - app-network

  inventory:
    container_name: inventory_microservice
    build:
      context: .
      dockerfile: ./inventory/Dockerfile
    ports:
      - "50051:50051"
    env_file:
      - ./inventory/.env.inventory
    depends_on:
      inventory_db:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - app-network

  orders:
    container_name: orders_microservice
    build:
      context: .
      dockerfile: ./orders/Dockerfile
    ports:
      - "50052:50052"
    env_file:
      - ./orders/.env.orders
    depends_on:
      orders_db:
        condition: service_healthy
    networks:
      - app-network

  statistics:
    container_name: statistics_microservice
    build:
      context: .
      dockerfile: ./statistics/Dockerfile
    ports:
      - "50053:50053"
    env_file:
      - ./statistics/.env.statistics
    depends_on:
      statistics_db:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - app-network

networks:
  app-network:
    driver: bridge